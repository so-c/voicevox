name: Test

on:
  push:
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      ELECTRON_CACHE: .cache/electron
      ELECTRON_BUILDER_CACHE: .cache/electron-builder
      cache-version: v2
      PYTHON_VERSION: "3.8.10"
    steps:
      - uses: actions/checkout@master
      - id: node-version
        run: echo "::set-output name=NODE_VERSION::$(cat .node-version)"
      - uses: actions/setup-node@master
        with:
          node-version: "${{ steps.node-version.outputs.NODE_VERSION }}"
      - uses: actions/cache@master
        with:
          path: ~/.npm
          key: ${{ env.cache-version }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ env.cache-version }}-node-
      - name: Cache Electron
        uses: actions/cache@master
        with:
          path: ${{ env.ELECTRON_CACHE }}
          key: ${{ env.cache-version }}-${{ runner.os }}--electron-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ env.cache-version }}-${{ runner.os }}--electron-cache-

      - name: Cache Electron-Builder
        uses: actions/cache@master
        with:
          path: ${{ env.ELECTRON_BUILDER_CACHE }}
          key: ${{ env.cache-version }}-${{ runner.os }}--electron-builder-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ env.cache-version }}-${{ runner.os }}--electron-builder-cache-
      - run: npm ci
      - run: npm run lint
      - run: npm run markdownlint
      - run: npm run test:unit

      - name: Checkout Engine
        uses: actions/checkout@master
        with:
          repository: VOICEVOX/voicevox_engine
          path: ./voicevox_engine
      - name: Set up Python ${{ env.PYTHON_VERSION }} for Run Engine
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
      - name: Install Python dependencies
        shell: bash
        run: |
          # FIXME: SO-C cannot solve known issue.
          # https://github.com/Nuitka/Nuitka/issues/1406
          python -m pip install --upgrade pip setuptools==60.6.0 wheel
          pip install -r ./voicevox_engine/requirements.txt -target ./voicevox_engine
      - name: Configure .env
        run: (Get-Content ./.env.production) -replace "run.exe", "./voicevox_engine/run.py --enable_mock" > .env
        shell: pwsh
      - name: End to End Testing
        run: npm run test:e2e
      
      - run: npm run electron:build_pnever
